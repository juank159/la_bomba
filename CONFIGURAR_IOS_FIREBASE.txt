================================================================================
üì± CONFIGURAR FIREBASE PARA iOS (iPhone/iPad)
================================================================================

Sigue estos pasos para agregar soporte de notificaciones push en iOS:

================================================================================
PASO 1: Descargar GoogleService-Info.plist desde Firebase Console
================================================================================

1. Ve a Firebase Console:
   https://console.firebase.google.com/

2. Selecciona tu proyecto: "la-bomba-414b6"

3. En la p√°gina principal, ver√°s tus apps. Si no has agregado una app iOS:

   A. Click en el √≠cono de iOS (el logo de Apple)
   B. Ingresa los datos:
      - iOS bundle ID: com.labomba.pedidos (o el que uses en tu Info.plist)
      - App nickname: La Bomba iOS (opcional)
      - App Store ID: (d√©jalo en blanco por ahora)
   C. Click en "Registrar app"

4. Si ya existe una app iOS registrada:

   A. Click en el √≠cono de engranaje (‚öôÔ∏è) al lado de "Project Overview"
   B. Click en "Configuraci√≥n del proyecto" / "Project settings"
   C. Ve a la pesta√±a "General"
   D. Baja hasta "Tus apps" / "Your apps"
   E. Busca la secci√≥n de iOS apps
   F. Click en el bot√≥n "GoogleService-Info.plist" para descargar

5. Se descargar√° un archivo llamado: GoogleService-Info.plist

================================================================================
PASO 2: Agregar GoogleService-Info.plist al proyecto iOS
================================================================================

Opci√≥n A: Usando Xcode (Recomendado)
-------------------------------------

1. Abre el proyecto iOS en Xcode:
   cd /Users/mac/Documents/pedidos/frontend
   open ios/Runner.xcworkspace

   ‚ö†Ô∏è IMPORTANTE: Abre Runner.xcworkspace, NO Runner.xcodeproj

2. En Xcode, en el navegador de archivos (lado izquierdo):
   - Haz click derecho en la carpeta "Runner" (la que tiene el √≠cono azul)
   - Selecciona "Add Files to Runner..."

3. Navega hasta donde descargaste GoogleService-Info.plist

4. Selecciona el archivo GoogleService-Info.plist

5. Aseg√∫rate de marcar:
   ‚úÖ "Copy items if needed"
   ‚úÖ "Add to targets" > Runner (debe estar marcado)

6. Click en "Add"

7. Verifica que el archivo aparezca en:
   Runner > Runner > GoogleService-Info.plist


Opci√≥n B: Manualmente (si no tienes Xcode)
-------------------------------------------

1. Copia el archivo descargado a la carpeta iOS:
   cp ~/Downloads/GoogleService-Info.plist /Users/mac/Documents/pedidos/frontend/ios/Runner/

2. Abre el archivo project.pbxproj:
   /Users/mac/Documents/pedidos/frontend/ios/Runner.xcodeproj/project.pbxproj

3. Este paso es m√°s complejo, por eso se recomienda usar Xcode.

================================================================================
PASO 3: Verificar Bundle ID
================================================================================

El Bundle ID en tu proyecto debe coincidir con el de Firebase.

1. Abre Xcode:
   open /Users/mac/Documents/pedidos/frontend/ios/Runner.xcworkspace

2. Selecciona "Runner" en el navegador (arriba a la izquierda)

3. En la pesta√±a "General", busca "Bundle Identifier"

4. Anota el Bundle ID (ejemplo: com.labomba.pedidos)

5. Ve a Firebase Console > Project Settings > General > iOS apps
   - Verifica que el Bundle ID coincida

Si NO coinciden:
- Opci√≥n 1: Cambia el Bundle ID en Xcode para que coincida con Firebase
- Opci√≥n 2: Registra una nueva app iOS en Firebase con tu Bundle ID actual

================================================================================
PASO 4: Configurar permisos en Info.plist
================================================================================

1. Abre el archivo Info.plist:
   /Users/mac/Documents/pedidos/frontend/ios/Runner/Info.plist

2. Agrega estas l√≠neas ANTES de la √∫ltima etiqueta </dict>:

<key>FirebaseAppDelegateProxyEnabled</key>
<false/>
<key>UIBackgroundModes</key>
<array>
    <string>fetch</string>
    <string>remote-notification</string>
</array>

Deber√≠a verse as√≠:

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    ... (otros datos) ...

    <key>FirebaseAppDelegateProxyEnabled</key>
    <false/>
    <key>UIBackgroundModes</key>
    <array>
        <string>fetch</string>
        <string>remote-notification</string>
    </array>
</dict>
</plist>

================================================================================
PASO 5: Configurar AppDelegate.swift
================================================================================

1. Abre el archivo:
   /Users/mac/Documents/pedidos/frontend/ios/Runner/AppDelegate.swift

2. El archivo ya debe tener algo similar a esto (Flutter lo configura):

import UIKit
import Flutter

@UIApplicationMain
@objc class AppDelegate: FlutterAppDelegate {
  override func application(
    _ application: UIApplication,
    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
  ) -> Bool {
    // Flutter Engine
    GeneratedPluginRegistrant.register(with: self)

    // Solicitar permisos de notificaci√≥n (iOS)
    if #available(iOS 10.0, *) {
      UNUserNotificationCenter.current().delegate = self as UNUserNotificationCenterDelegate
    }

    return super.application(application, didFinishLaunchingWithOptions: launchOptions)
  }
}

3. Si no tiene las l√≠neas de UNUserNotificationCenter, agr√©galas.

================================================================================
PASO 6: Instalar Pods
================================================================================

1. Ve a la carpeta iOS:
   cd /Users/mac/Documents/pedidos/frontend/ios

2. Instala los pods de Firebase:
   pod install

   O si da error:
   pod deintegrate
   pod install

3. Espera a que termine (puede tomar 2-5 minutos)

4. Deber√≠as ver:
   ‚úÖ Installing Firebase...
   ‚úÖ Installing FirebaseCore...
   ‚úÖ Installing FirebaseMessaging...

================================================================================
PASO 7: Limpiar y Reconstruir
================================================================================

1. Limpia el proyecto:
   cd /Users/mac/Documents/pedidos/frontend
   flutter clean

2. Obt√©n las dependencias:
   flutter pub get

3. Vuelve a construir:
   flutter run

================================================================================
PASO 8: Probar en un dispositivo iOS real
================================================================================

‚ö†Ô∏è IMPORTANTE: Las notificaciones push NO funcionan en el simulador de iOS.
Necesitas un iPhone o iPad f√≠sico para probar.

1. Conecta tu iPhone/iPad al Mac con un cable

2. Aseg√∫rate de que el dispositivo est√© desbloqueado y conf√≠es en la computadora

3. En Xcode, selecciona tu dispositivo en lugar del simulador

4. Ejecuta:
   flutter run

5. Si aparece un error de firma:
   - Abre ios/Runner.xcworkspace en Xcode
   - Selecciona Runner en el navegador
   - Ve a "Signing & Capabilities"
   - Selecciona tu equipo (Team)
   - Marca "Automatically manage signing"

================================================================================
‚úÖ VERIFICAR QUE TODO FUNCIONA
================================================================================

Cuando ejecutes la app en iOS, deber√≠as ver:

1. Popup pidiendo permiso para notificaciones
2. En la consola:
   üî• Initializing Firebase...
   ‚úÖ Firebase initialized successfully
   üì± Notification permission status: authorized
   üì≤ FCM Token: [token largo para iOS]
   üíæ FCM Token saved to backend successfully

================================================================================
‚ùå PROBLEMAS COMUNES
================================================================================

1. ERROR: "No Firebase App '[DEFAULT]' has been created"
   Soluci√≥n: Verifica que GoogleService-Info.plist est√© en ios/Runner/

2. ERROR: "The bundle identifier does not match"
   Soluci√≥n: El Bundle ID en Xcode debe coincidir con Firebase

3. ERROR: "CocoaPods not installed"
   Soluci√≥n: Instala CocoaPods:
   sudo gem install cocoapods

4. ERROR al hacer pod install
   Soluci√≥n:
   cd ios
   pod repo update
   pod install

5. Notificaciones no llegan en iOS
   - Verifica que est√©s en un dispositivo REAL (no simulador)
   - Verifica permisos en Settings > Notifications > Tu App
   - Verifica que el token FCM sea diferente al de Android

================================================================================
üìù RESUMEN DE ARCHIVOS
================================================================================

Deber√≠as tener estos archivos:

Android:
‚úÖ android/app/google-services.json

iOS:
‚úÖ ios/Runner/GoogleService-Info.plist
‚úÖ ios/Runner/Info.plist (con permisos configurados)
‚úÖ ios/Runner/AppDelegate.swift (con UNUserNotificationCenter)

================================================================================
üéØ SIGUIENTE PASO
================================================================================

Despu√©s de configurar iOS:

1. Ejecuta: flutter run en un iPhone/iPad f√≠sico
2. Acepta el permiso de notificaciones cuando aparezca
3. Haz login en la app
4. Verifica en Supabase que el token se guard√≥
5. Env√≠a una notificaci√≥n de prueba desde el backend

¬°Y listo! Tu app estar√° recibiendo notificaciones push en iOS.

================================================================================
