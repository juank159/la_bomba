================================================================================
üéâ SISTEMA DE NOTIFICACIONES PUSH - LISTO PARA PROBAR
================================================================================

‚úÖ TODO EST√Å CONFIGURADO CORRECTAMENTE:

Backend (Render):
  ‚úÖ Firebase Admin SDK inicializado
  ‚úÖ Variable de entorno FIREBASE_SERVICE_ACCOUNT configurada
  ‚úÖ Endpoints para FCM token listos (/users/fcm-token)
  ‚úÖ FirebaseNotificationService con m√©todos de env√≠o

Base de datos (Supabase):
  ‚úÖ Columna fcm_token agregada a tabla users
  ‚úÖ √çndice creado para b√∫squedas r√°pidas
  ‚úÖ Backup de seguridad creado

Frontend (Flutter):
  ‚úÖ Firebase inicializado en main.dart
  ‚úÖ FirebaseMessagingService configurado
  ‚úÖ LocalNotificationService para notificaciones en foreground
  ‚úÖ BadgeService para contador de app
  ‚úÖ Permisos configurados en Android
  ‚úÖ google-services.json presente
  ‚úÖ Dependencias instaladas (firebase_core, firebase_messaging, etc.)

================================================================================
üì± C√ìMO PROBAR LAS NOTIFICACIONES
================================================================================

PASO 1: Iniciar la app
------------------------
1. Abre tu proyecto Flutter en tu editor
2. Aseg√∫rate de estar en el directorio frontend:
   cd /Users/mac/Documents/pedidos/frontend

3. Ejecuta la app en tu dispositivo Android:
   flutter run

PASO 2: Login en la app
------------------------
1. Cuando la app inicie, ver√°s logs en la consola:
   üî• Initializing Firebase...
   ‚úÖ Firebase initialized successfully
   üì± Notification permission status: ...
   üì≤ FCM Token: [largo token]
   üíæ FCM Token saved to backend successfully

2. Inicia sesi√≥n con tu usuario

3. El token FCM se guardar√° autom√°ticamente en el backend

PASO 3: Verificar que el token se guard√≥
-----------------------------------------
Puedes verificar en Supabase que el token se guard√≥:
1. Ve a Table Editor > users
2. Busca tu usuario
3. Verifica que la columna fcm_token tenga un valor largo (no NULL)

PASO 4: Enviar notificaci√≥n de prueba
--------------------------------------
Ahora puedes probar enviando una notificaci√≥n desde el backend.

Hay dos formas:

OPCI√ìN A: Crear un endpoint de prueba (recomendado)
----------------------------------------------------
Agrega este endpoint temporal en src/modules/users/users.controller.ts:

@Post('test-notification')
async testNotification(@Request() req, @Body('userId') userId: string) {
  const firebaseService = this.moduleRef.get(FirebaseNotificationService);

  const result = await firebaseService.sendToUser(
    userId,
    'üéâ Notificaci√≥n de prueba',
    'Si ves esto, las notificaciones funcionan perfectamente!',
    { type: NotificationTypeEnum.ORDER_UPDATE, orderId: 'test-123' }
  );

  return { success: result, message: 'Notificaci√≥n enviada' };
}

Luego ejecuta (desde tu terminal o Postman):
curl -X POST https://tu-backend.onrender.com/users/test-notification \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer TU_TOKEN" \
  -d '{"userId": "tu-user-id"}'

OPCI√ìN B: Integrar en funcionalidad existente
----------------------------------------------
Ya tienes m√©todos listos en FirebaseNotificationService:

1. sendSupervisorTaskNotification() - Cuando se asigna una tarea
2. sendAdminTaskNotification() - Cuando hay una tarea para admin
3. sendProductApprovedNotification() - Cuando se aprueba un producto
4. sendCreditReminderNotification() - Recordatorio de cr√©dito
5. sendOrderUpdateNotification() - Actualizaci√≥n de pedido

Puedes llamar estos m√©todos desde tus servicios existentes.

================================================================================
üß™ ESCENARIOS DE PRUEBA
================================================================================

1. APP EN FOREGROUND (abierta y visible)
   - Deber√≠as ver una notificaci√≥n local aparecer
   - El badge del √≠cono se actualiza a 1
   - Console muestra: üì¨ Notification received (foreground)

2. APP EN BACKGROUND (minimizada)
   - El sistema muestra la notificaci√≥n autom√°ticamente
   - Al tocar la notificaci√≥n, la app se abre en la pantalla correcta
   - Console muestra: üì¨ Notification received (background)

3. APP CERRADA (terminada)
   - El sistema muestra la notificaci√≥n autom√°ticamente
   - Al tocar la notificaci√≥n, la app se inicia y navega a la pantalla correcta
   - Console muestra: üîî User tapped notification (terminated)

================================================================================
üîç QU√â BUSCAR EN LOS LOGS
================================================================================

Backend (Render):
‚úÖ Firebase Admin initialized successfully
‚úÖ Notification sent to user [userId]

Frontend (Flutter console):
‚úÖ Firebase initialized successfully
‚úÖ User granted notification permissions
üì≤ FCM Token: [token]
üíæ FCM Token saved to backend successfully
üì¨ Notification received (foreground/background)
üîî User tapped notification

Supabase:
‚úÖ Columna fcm_token con valor en tu usuario

================================================================================
‚ùå SI ALGO NO FUNCIONA
================================================================================

1. NO SE PIDE PERMISO DE NOTIFICACIONES:
   - Android 13+: El permiso se solicita autom√°ticamente
   - Android 12 o menos: El permiso se otorga autom√°ticamente
   - Verifica en Settings > Apps > Tu App > Notifications

2. NO SE GUARDA EL TOKEN:
   - Verifica logs del backend: "FCM Token saved to backend"
   - Verifica que el usuario est√© autenticado
   - Verifica el endpoint PUT /users/fcm-token en el backend

3. NO LLEGAN NOTIFICACIONES:
   - Verifica que el token est√© en la BD (Supabase > users > fcm_token)
   - Verifica logs del backend al enviar notificaci√≥n
   - Verifica que google-services.json sea del mismo proyecto Firebase

4. ERROR "Invalid registration token":
   - El token FCM puede expirar o invalidarse
   - El c√≥digo autom√°ticamente limpia tokens inv√°lidos
   - Cierra y abre la app para obtener un nuevo token

================================================================================
üìä PR√ìXIMOS PASOS
================================================================================

1. Probar las notificaciones en todos los estados de la app
2. Integrar el env√≠o de notificaciones en tu l√≥gica de negocio:
   - Cuando se crea un pedido
   - Cuando se aprueba un producto
   - Cuando hay una tarea pendiente
   - Cuando hay un recordatorio de cr√©dito

3. Opcional: Configurar iOS (si quieres soporte para iPhone)
   - Descargar GoogleService-Info.plist desde Firebase Console
   - Colocar en ios/Runner/
   - Configurar permisos en Info.plist

================================================================================
üí° NOTAS IMPORTANTES
================================================================================

- El FCM token se obtiene autom√°ticamente al iniciar la app
- El token se guarda en el backend solo si el usuario est√° autenticado
- El token se actualiza autom√°ticamente si cambia (token refresh)
- Al hacer logout, deber√≠as limpiar el token (ya est√° implementado en deleteToken)
- Las notificaciones funcionan en Android y iOS
- No necesitas configuraci√≥n adicional para que funcione

================================================================================
