version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15.3
    container_name: pedidos_db_prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pedidos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicaci√≥n NestJS
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: pedidos-app:latest
    container_name: pedidos_app_prod
    restart: always
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      NODE_ENV: production
      PORT: ${PORT}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pedidos-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  pedidos-network:
    driver: bridge
